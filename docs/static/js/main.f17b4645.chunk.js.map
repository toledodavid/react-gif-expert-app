{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","event","preventDefault","trim","length","categories","type","placeholder","onChange","target","value","GifGridItem","title","imgUrl","className","src","alt","getGifs","category","a","url","encodeURI","fetch","response","json","data","gifs","map","img","id","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"mMAoCeA,EAjCK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEHC,mBAAS,IAFN,mBAEhCC,EAFgC,KAEpBC,EAFoB,KAkBvC,OACE,sBAAMC,SAXa,SAACC,GACpBA,EAAMC,iBAEFJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAAAS,GAAU,OAAKP,GAAL,mBAAoBO,OAC5CN,EAAc,MAMhB,SACE,uBACEO,KAAK,OACLC,YAAaT,EACbU,SAnBoB,SAACP,GACzBF,EAAcE,EAAMQ,OAAOC,a,QCMhBC,EAXK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,OAE3B,OACE,sBAAKC,UAAU,yCAAf,UACE,qBAAKC,IAAKF,EAAQG,IAAKJ,IACvB,4BAAIA,Q,uBCNGK,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACfC,EADe,iDACiCC,UAAUH,GAD3C,+DAGEI,MAAMF,GAHR,cAGfG,EAHe,gBAIAA,EAASC,OAJT,uBAIdC,EAJc,EAIdA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAC3B,MAAO,CACLC,GAAID,EAAIC,GACRjB,MAAOgB,EAAIhB,MACXC,OAAM,UAAEe,EAAIE,cAAN,aAAE,EAAYC,iBAAiBX,QAVpB,kBAadM,GAbc,4CAAH,sDCuBLM,EApBC,SAAC,GAAgB,IAAfd,EAAc,EAAdA,SAAc,ECFJ,SAACA,GAAc,IAAD,EACdrB,mBAAS,CACjC4B,KAAM,GACNQ,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAmBxC,OAbAC,qBAAU,WACRnB,EAAQC,GAAUmB,MAAK,SAAAC,GAErBC,YAAW,WACTJ,EAAS,CACPV,KAAMa,EACNL,SAAQ,MAET,UAGJ,CAACf,IAEGgB,EDfwBM,CAAatB,GAAhCY,EAFkB,EAEvBL,KAAaQ,EAFU,EAEVA,QAEpB,OACE,qCACE,oBAAInB,UAAU,oCAAd,SAAmDI,IAElDe,GAAW,mBAAGnB,UAAU,mCAAb,wBAEZ,qBAAKA,UAAU,YAAf,SAEEgB,EAAOH,KAAI,SAAAC,GAAG,OAAI,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEOjCY,EApBM,WAAO,IAAD,EAEW5C,mBAAS,CAAC,gBAFrB,mBAElBQ,EAFkB,KAENT,EAFM,KAKzB,OACE,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEIS,EAAWsB,KAAI,SAAAT,GAAQ,OAAI,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,Y,MCXnDwB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f17b4645.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst AddCategory = ({setCategories}) => {\n\n  const [inputValue, setInputValue] = useState('');\n\n  const handleInputChange = (event) => {\n    setInputValue(event.target.value);\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    if (inputValue.trim().length > 2) {\n      setCategories(categories => [inputValue, ...categories]);\n      setInputValue('');\n    }\n    \n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        placeholder={inputValue}\n        onChange={handleInputChange}\n      />\n    </form>\n  );\n}\n\nAddCategory.propTypes = {\n  setCategories: PropTypes.func.isRequired\n}\n\nexport default AddCategory;","import React from 'react';\n\n\nconst GifGridItem = ({title, imgUrl}) => {\n\n  return(\n    <div className=\"card animate__animated animate__fadeIn\">\n      <img src={imgUrl} alt={title} />\n      <p>{title}</p>\n    </div>\n  );\n}\n\n\nexport default GifGridItem;","\n\nexport const getGifs = async(category) => {\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=FMH46HzHk8wFS4OcWPBUXvpm7eYt14bF`;\n\n  const response = await fetch(url);\n  const {data} = await response.json();\n\n  const gifs = data.map(img => {\n    return {\n      id: img.id,\n      title: img.title,\n      imgUrl: img.images?.downsized_medium.url\n    }\n  });\n  return gifs;\n}","import React from 'react';\nimport GifGridItem from './GifGridItem';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\n\n\nconst GifGrid = ({category}) => {\n\n  const {data:images, loading} = useFetchGifs(category);\n\n  return(\n    <>\n      <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\n\n      {loading && <p className=\"animate__animated animate__flash\">Loading...</p>}\n    \n      <div className=\"card-grid\">\n      {\n        images.map(img => <GifGridItem key={img.id} {...img} />)\n      }\n      </div>\n    </>\n  );\n}\n\n\nexport default GifGrid;","import { useState, useEffect } from 'react';\nimport { getGifs } from '../helpers/getGifs';\n\nexport const useFetchGifs = (category) => {\n  const [state, setState] = useState({\n    data: [],\n    loading: true\n  });\n\n  useEffect(() => {\n    getGifs(category).then(imgs => {\n\n      setTimeout(() => {\n        setState({\n          data: imgs,\n          loading:false\n        });\n      }, 2000);\n      \n    });\n  }, [category]);\n\n  return state;\n}","import React, { useState } from 'react';\nimport AddCategory from './components/AddCategory';\nimport GifGrid from './components/GifGrid';\n\nconst GifExpertApp = () => {\n\n  const [categories, setCategories] = useState(['Dragon Ball']);\n\n\n  return (\n    <>\n      <h2>GifExpertApp</h2>\n      <AddCategory setCategories={setCategories} />\n      <hr/>\n\n      <ol>\n        {\n          categories.map(category => <GifGrid key={category} category={category} />)\n        }\n      </ol>\n    </>\n  );\n}\n\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}